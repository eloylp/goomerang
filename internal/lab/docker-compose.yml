version: "3.8"
services:

  server:
    image: golang:1.8-alpine
    container_name: server
    depends_on:
      - prometheus
      - grafana
    command:
      - /app/server
    volumes:
      - ./server/server:/app/server:Z
    environment:
      - LISTEN_ADDR=0.0.0.0:8080
      - PPROF_LISTEN_ADDR=0.0.0.0:6060
      - METRICS_LISTEN_ADDR=0.0.0.0:9971
      - MESSAGE_SIZE_BYTES=1000
      - HANDLER_CONCURRENCY=200
    expose:
      - 8080 # serving port
      - 9971 # metrics
    ports:
      - "6060:6060" ## Go pprof
    networks:
      - lab

  proxy:
    container_name: proxy
    image: golang:1.8-alpine
    command:
      - /app/proxy
    volumes:
      - ./proxy/proxy:/app/proxy:Z
    depends_on:
      - prometheus
      - grafana
      - server
    environment:
      - PROXY_LISTEN_ADDR=0.0.0.0:8081
      - SERVER_LISTEN_ADDR=server:8080
    expose:
      - 8081
    networks:
      - lab

  client: &client
    container_name: client
    image: golang:1.8-alpine
    command:
      - /app/client
    volumes:
      - ./client/client:/app/client:Z
    environment:
      - TARGET_ADDR=server:8080
      - PPROF_LISTEN_ADDR=0.0.0.0:6060
      - METRICS_LISTEN_ADDR=0.0.0.0:9971
      - MESSAGE_SIZE_BYTES=1000
      - HANDLER_CONCURRENCY=200
    depends_on:
      - prometheus
      - grafana
      - proxy
    expose:
      - 9971 # metrics
    ports:
      - "6061:6060" ## Go pprof
    networks:
      - lab

#    We could add more clients here (just keeping this close), copying the first one.
#    We must REMEMBER to add it into the targets config, located at ./prometheus/prometheus.yml.
#    Just uncomment and replica the following lines:

  client2:
    container_name: client2
    <<: *client
    ports:
      - "6062:6060" ## Go pprof

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus:Z
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - lab

  grafana:
    image: grafana/grafana-oss:8.5.3
    depends_on:
      - prometheus
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana:Z
      - ./grafana/provisioning:/etc/grafana/provisioning:Z
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - lab

networks:
  lab:
volumes:
  prometheus_data:
  grafana_data: